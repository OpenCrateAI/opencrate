[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "opencrate"
description = "Democratizing AI by simplifing DX for everyone"
authors = [
    {name = "Rishik C. Mourya", email = "braindotai@gmail.ai"}
]
version = "0.1.0"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
dependencies = [
    "pydantic_settings",
    "prompt-toolkit",
    "questionary",
    "ipywidgets",
    "matplotlib",
    "pandas",
    "numpy",
    "opencv-python-headless",
    "rich",
    "typer",
    "loguru",
    "docker",
    "jinja2",
    "imageio",
    "requests",
    "pyyaml",
    "lovelyplots",
    "tqdm",
    "pynvml",
    "pyinstrument",
    "memory_profiler",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "pytest",
    "pytest-cov",
    "tox",
    "types-requests",
    "types-PyYAML",
    "types-docker",
    "torch",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings-python",
]

[project.scripts]
oc = "opencrate.cli.main:app"

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false
license-files = ["LICENCE"]

[tool.setuptools.packages.find]
where = ["src"]
include = ["opencrate", "opencrate.*"]

[tool.ruff]
src = ["src"]
line-length = 180

extend-exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pycache__",
    "docs/_build",
]

[tool.ruff.lint]
select = [
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C4",  # flake8-comprehensions
    "E",  # pycodestyle errors
]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false

[tool.mypy]
exclude = ".git, __pycache__, build, dist, .mypy_cache, .tox, .venv"
disable_error_code = ["unreachable"]
files = ["src", "tests"]
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = false
disallow_untyped_defs = false
no_implicit_optional = false
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_unreachable = true
warn_no_return = false
warn_unused_ignores = true
no_implicit_reexport = false

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]
addopts = "--verbose --cov=opencrate --cov-report=term-missing --color=yes -vv"
testpaths = ["tests"]