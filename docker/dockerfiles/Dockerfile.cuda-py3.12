# STAGE 1: Base image with OS dependencies and CLI tools.
FROM nvcr.io/nvidia/cuda:12.4.1-base-ubuntu22.04 AS base

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Kolkata
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

# Install all Ubuntu & CLI packages in a single, optimized layer
RUN apt-get update && apt-get install -y --no-install-recommends software-properties-common ca-certificates build-essential pkg-config libgoogle-perftools-dev cmake tzdata gnupg wget curl vim git speedtest-cli iputils-ping btop unrar make tree htop bat tldr zoxide cpufetch jq zsh ripgrep fzf \
    # Add external repos for eza and fastfetch
    && mkdir -p /etc/apt/keyrings \
    && wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | gpg --dearmor -o /etc/apt/keyrings/gierens.gpg \
    && echo 'deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main' | tee /etc/apt/sources.list.d/gierens.list \
    && chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list \
    && add-apt-repository ppa:zhangsongcui3371/fastfetch -y \
    && apt-get update \
    && apt-get install -y --no-install-recommends eza fastfetch \
    # Install lazygit
    && LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": *"v\K[^"]*') \
    && curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz" \
    && tar xf lazygit.tar.gz lazygit \
    && install lazygit /usr/local/bin \
    && rm lazygit.tar.gz \
    # Aggressive cleanup
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Setup user shell environment (zsh, atuin, etc.)
COPY docker/cli/ /home/
RUN chsh -s $(which zsh) || true \
    && wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O - | zsh || true \
    && git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $HOME/.oh-my-zsh/custom/themes/powerlevel10k \
    && git clone https://github.com/zsh-users/zsh-autosuggestions $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions \
    && git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting \
    && curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh \
    && mv /home/zsh/.zshrc ~/.zshrc \
    && mv /home/zsh/.p10k.zsh ~/.p10k.zsh \
    && mv /home/zsh/.aliases.sh ~/ \
    && mv /home/zsh/.exports.sh ~/ \
    && mkdir -p ~/.config/btop/ ~/.config/atuin/ ~/.config/fastfetch/ \
    && cp -r /home/btop/ ~/.config/ \
    && cp -r /home/atuin/ ~/.config/ \
    && cp -r /home/fastfetch/ ~/.config/ \
    # Cleanup copied files
    && rm -rf /home/zsh /home/btop /home/atuin /home/fastfetch

# STAGE 2: Final application image
FROM base

# Install Python from deadsnakes PPA
RUN sed -i -e 's/python3.10/python3.12/g' ~/.aliases.sh \
    && add-apt-repository ppa:deadsnakes/ppa -y \
    && apt-get update \
    && apt-get install -y --no-install-recommends python3.12 python3.12-dev nvtop \
    && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 \
    && python3.12 -m pip install --no-cache-dir --upgrade pip \
    # Cleanup
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache

# Install Python packages
RUN python3.12 -m pip install --no-cache-dir --upgrade ipython jupyter \
    && python3.12 -m pip cache purge

# Copy and install the opencrate application
WORKDIR /home/opencrate/
COPY pyproject.toml setup.cfg setup.py ./
COPY src/ ./src/
RUN python3.12 -m pip install --no-cache-dir -e . \
    && python3.12 -m pip cache purge

# Setup final workspace and hooks
WORKDIR /home/workspace/
RUN git config --global --add safe.directory '*' && git config --global init.defaultBranch main

COPY docker/hooks/ /root/.hooks/