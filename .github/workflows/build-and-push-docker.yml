name: Build and Push Docker Images

on:
    push:
        tags:
            - 'v*.*.*'
    workflow_dispatch:

jobs:
    # Job 1: Run once to generate all Dockerfiles needed by the build jobs
    generate-files:
        name: Generate Dockerfiles
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get_version.outputs.VERSION }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get the version from the Git ref
              id: get_version
              run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_OUTPUT

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.10'

            - name: Install Python dependencies
              run: pip install rich loguru

            - name: Generate all Dockerfiles
              run: make docker-generate

            - name: Upload Dockerfiles as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: dockerfiles
                  path: ./docker/dockerfiles

    # Job 2: Build all images in a parallel matrix
    build-images:
        name: Build ${{ matrix.runtime }}-py${{ matrix.python_version }}
        runs-on: ubuntu-latest
        needs: generate-files # Wait for files to be generated
        strategy:
            fail-fast: false # IMPORTANT: Let all builds finish even if one fails
            matrix:
                runtime: [cpu, cuda]
                python_version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Download Dockerfiles artifact
              uses: actions/download-artifact@v4
              with:
                  name: dockerfiles
                  path: ./docker/dockerfiles

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and Push Single Image
              run: |
                make ci-build \
                  RUNTIME=${{ matrix.runtime }} \
                  PYTHON_VERSION=${{ matrix.python_version }} \
                  VERSION=${{ needs.generate-files.outputs.version }}

    # Job 3: Tag 'latest' only after ALL build jobs have succeeded
    release-latest:
        name: Tag "latest"
        runs-on: ubuntu-latest
        needs: [generate-files, build-images] # Depends on both previous jobs
        if: success() && github.ref_type == 'tag'
        steps:
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Tag and Push "latest" tag
              run: make ci-release VERSION=${{ needs.generate-files.outputs.version }}