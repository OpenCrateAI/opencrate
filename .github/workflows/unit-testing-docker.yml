name: Test Docker Images

on:
  workflow_run:
    workflows: ["Build and Push Docker"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      version:
        description: 'The image tag to test (e.g., v1.2.3 or main)'
        required: true
        default: 'main'

jobs:
  trigger-tests:
      name: Trigger Tests
      runs-on: ubuntu-latest
      if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
      steps:
        - name: Log Trigger Event
          run: echo "Build workflow succeeded. Triggering test matrix."

  test-images:
    name: Test ${{ matrix.os }} / ${{ matrix.runtime }} / py${{ matrix.python_version }}
    needs: trigger-tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        runtime: [cpu, cuda]
        python_version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine Version to Test
        id: get_version
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            # For workflow_run, the branch/tag is in head_branch
            echo "VERSION=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_OUTPUT
          else
            # For manual dispatch, use the user's input
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run Docker Container Test
        shell: bash
        run: |
          make docker-test \
            RUNTIME=${{ matrix.runtime }} \
            PYTHON_VERSION=${{ matrix.python_version }} \
            VERSION=${{ steps.get_version.outputs.VERSION }}

      - name: Upload Test Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-test-logs-${{ matrix.os }}-${{ matrix.runtime }}-py${{ matrix.python_version }}
          path: tests/logs/